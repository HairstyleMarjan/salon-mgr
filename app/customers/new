'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { createClient } from '@lib/supabase-browser';

const s = createClient();

export default function NewCustomerPage() {
  const router = useRouter();
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName]   = useState('');
  const [phone, setPhone]         = useState('');
  const [email, setEmail]         = useState('');
  const [notes, setNotes]         = useState('');
  const [saving, setSaving]       = useState(false);
  const [error, setError]         = useState<string | undefined>();

  async function onSubmit(e: React.FormEvent) {
    e.preventDefault();
    setError(undefined);

    // simpele validatie
    if (!firstName.trim() || !lastName.trim()) {
      setError('Voornaam en achternaam zijn verplicht.');
      return;
    }

    setSaving(true);
    const { data, error } = await s
      .from('customers')
      .insert([
        {
          first_name: firstName.trim(),
          last_name : lastName.trim(),
          phone     : phone.trim() || null,
          email     : email.trim() || null,
          notes     : notes.trim() || null,
        },
      ])
      .select('id')
      .single();

    setSaving(false);

    if (error) {
      setError(error.message);
      return;
    }

    // Klaar → naar detailpagina
    router.push(`/customers/${data!.id}`);
  }

  return (
    <div className="max-w-lg">
      <h1 className="text-2xl font-semibold mb-4">Nieuwe klant</h1>

      <form onSubmit={onSubmit} className="space-y-3">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
          <input
            className="input"
            placeholder="Voornaam *"
            value={firstName}
            onChange={(e) => setFirstName(e.target.value)}
            required
          />
          <input
            className="input"
            placeholder="Achternaam *"
            value={lastName}
            onChange={(e) => setLastName(e.target.value)}
            required
          />
        </div>

        <input
          className="input"
          placeholder="Telefoon"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
        />

        <input
          className="input"
          type="email"
          placeholder="E-mail"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />

        <textarea
          className="input min-h-[120px]"
          placeholder="Notities"
          value={notes}
          onChange={(e) => setNotes(e.target.value)}
        />

        {error && <p className="text-sm text-red-600">{error}</p>}

        <div className="flex gap-2">
          <button className="btn" type="submit" disabled={saving}>
            {saving ? 'Opslaan…' : 'Opslaan'}
          </button>
          <a className="btn" href="/customers">Annuleren</a>
        </div>
      </form>
    </div>
  );
}
